variables:
  WEB_ROOT: "web"
  REPORT_DIR: "reports"
  PHPMETRICS: "v2.4.1"

stages:
  - build
  - tests
  - metrics

.ensure_report:
  - &ensure_report
    mkdir -p ${REPORT_DIR} && chmod -R 777 ${REPORT_DIR}

.default_artifacts: &default_artifacts
  paths:
    - ${REPORT_DIR}/*.html
  name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
  expire_in: 1 day

.report_template: &report_template
  dependencies:
    - Build
  before_script:
    - if [ ! -f ./${TOOL_PHAR} ];
      then
        curl -fsSL ${TOOL_URL} -o ${TOOL_PHAR};
      fi
    - chmod +x ${TOOL_PHAR}
    - *ensure_report
  artifacts:
    <<: *default_artifacts
    paths:
      - ${REPORT_DIR}/*

# Testing template for phpunit, this provide Apache / Php.
.test_template: &test_template
  image: mogtofu33/drupal8ci:8.6
  # Build is not for master but only some other branches.
  except:
    - master
  only:
    - testing
  services:
    - mariadb:latest
  before_script:
    - *ensure_report
    - cp .gitlab-ci/phpunit.xml ${WEB_ROOT}/core/
    - cp .gitlab-ci/settings-ci.php ${WEB_ROOT}/sites/default/settings.php
    - mkdir -p /var/www/html
    - ln -s ${CI_PROJECT_DIR}/${WEB_ROOT} /var/www/html/web
    # Prepare tests folder.
    - mkdir -p "${BROWSERTEST_OUTPUT_DIRECTORY}"
    - chmod -R g+s "${BROWSERTEST_OUTPUT_DIRECTORY}"
    - chown -R www-data:www-data ${WEB_ROOT}
    - apache2-foreground&
    - cd ${CI_PROJECT_DIR}/${WEB_ROOT}
    - ../vendor/bin/drush site-install --yes config_installer config_installer_sync_configure_form.sync_directory="../config/sync" --db-url=${SIMPLETEST_DB}
    - ../vendor/bin/drush status --field=bootstrap
  variables:
    MYSQL_ALLOW_EMPTY_PASSWORD: "1"
    MYSQL_DATABASE: "drupal"
    SIMPLETEST_BASE_URL: "http://localhost"
    SIMPLETEST_DB: "mysql://root@mariadb/drupal"
    BROWSERTEST_OUTPUT_DIRECTORY: "/var/www/html/web/sites/simpletest"
  artifacts:
    <<: *default_artifacts
    paths:
      - ${REPORT_DIR}/*

cache:
  key: drupal-$CI_BUILD_REF_NAME
  paths:
    - vendor
    - web

Build:
  stage: build
  image: mogtofu33/drupal8ci:8.6
  script:
    - composer --verbose --no-check-all --no-check-publish validate
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-suggest --profile
    - composer --verbose install-boostrap-sass

Unit and kernel tests:
  stage: tests
  dependencies:
    - Build
  <<: *test_template
  script:
    - sudo -E -u www-data
      ./vendor/bin/phpunit
        -c web/core --verbose
        --log-junit ${REPORT_DIR}/phpunit.xml
        --testdox-html ${REPORT_DIR}/phpunit.html
        --testsuite unit,kernel

Code coverage:
  stage: tests
  dependencies:
    - Build
  <<: *test_template
  script:
    # Create the needed folders.
    - mkdir -p ${REPORT_DIR}/coverage-xml
    - mkdir -p ${REPORT_DIR}/coverage-html
    - chmod -R 777 ${REPORT_DIR}
    - timeout 60m sudo -E -u www-data
      ./vendor/bin/phpunit
        -c web/core
        --coverage-xml ${REPORT_DIR}/coverage-xml
        --coverage-html ${REPORT_DIR}/coverage-html
        --coverage-text --colors=never
        --testsuite unit,kernel
  # https://docs.gitlab.com/ee/ci/yaml/#coverage
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'

Security report:
  stage: tests
  dependencies:
    - Build
  <<: *report_template
  script:
    - ./${TOOL_PHAR} security:check
  variables:
    TOOL_PHAR: "security-checker.phar"
    TOOL_URL: "https://get.sensiolabs.org/security-checker.phar"

Php metrics:
  stage: metrics
  <<: *report_template
  script:
    - ./${TOOL_PHAR}
        --report-html=${REPORT_DIR}
        --extensions=php,inc,module,theme
        web
  variables:
    TOOL_PHAR: "phpmetrics.phar"
    TOOL_URL: "https://github.com/phpmetrics/PhpMetrics/releases/download/${PHPMETRICS}/phpmetrics.phar"
  artifacts:
    <<: *default_artifacts
  when: manual

# Default docker image when not overriden.
image: alpine:latest
