# https://github.com/edbizarro/gitlab-ci-pipeline-php
image: edbizarro/gitlab-ci-pipeline-php:7.2-alpine

stages:
  - build
  - test
  - metrics

variables:
  REPORT_DIR: "reports"
  PHPMETRICS: "v2.4.1"
  SIMPLETEST_DB: "sqlite://tmp/site.sqlite"
  SIMPLETEST_BASE_URL: "http://127.0.0.1:8080"

cache:
  key: $CI_BUILD_REF_NAME
  paths:
    - vendor
    - web
    - composer.lock
    - security-checker.phar
    - phpmetrics.phar

.ensure_report:
  - &ensure_report
    mkdir -p ${REPORT_DIR} && chmod -R 777 ${REPORT_DIR}

.default_artifacts: &default_artifacts
  paths:
    - ${REPORT_DIR}/*.html
  name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
  expire_in: 1 day
  when: always

.test_template: &test_template
  dependencies:
    - build
  before_script:
    - mkdir -p ${REPORT_DIR}/coverage-xml
    - mkdir -p ${REPORT_DIR}/coverage-html
    - *ensure_report
    #- composer install --prefer-dist --no-ansi --no-interaction --no-progress --quiet --profile
    #- composer --verbose install-boostrap-sass
  script:
    - cd ${CI_PROJECT_DIR}/web
    - ${CI_PROJECT_DIR}/vendor/bin/drush site-install -vvv --yes config_installer config_installer_sync_configure_form.sync_directory="../config/sync" --db-url=sqlite://tmp/site.sqlite
    - ${CI_PROJECT_DIR}/vendor/bin/drush runserver $SIMPLETEST_BASE_URL &
    - until curl -s $SIMPLETEST_BASE_URL; do sleep 5s; done > /dev/null
  # Skip core/tests/Drupal/Tests/ComposerIntegrationTest.php because web/ has no composer.json
  # Ignore PageCache group temporarily, @see https://www.drupal.org/node/2770673
  # Ignore Setup group temporarily, @see https://www.drupal.org/node/2962157
    - ${CI_PROJECT_DIR}/vendor/bin/phpunit -c core --testsuite unit --exclude-group Composer,DependencyInjection,PageCache,Setup --coverage-text --colors=never
    - ${CI_PROJECT_DIR}/vendor/bin/drush status > ../${REPORT_DIR}/drush.txt
    - ${CI_PROJECT_DIR}/vendor/bin/drupal site:status > ../${REPORT_DIR}/console.txt
  # https://docs.gitlab.com/ee/ci/yaml/#coverage
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    <<: *default_artifacts
    paths:
      - ${REPORT_DIR}/*

.report_template: &report_template
  dependencies:
    - build
  before_script:
    - if [ ! -f ./${TOOL_PHAR} ];
      then
        curl -fsSL ${TOOL_URL} -o ${TOOL_PHAR};
      fi
    - chmod +x ${TOOL_PHAR}
    - *ensure_report
  artifacts:
    <<: *default_artifacts
    paths:
      - ${REPORT_DIR}/*.txt

build:
  stage: build
  script:
    - composer --verbose --no-check-all --no-check-publish validate
    - if [ ! -f "web/index.php" ];
      then
        composer install --prefer-dist --no-ansi --no-interaction --no-progress --quiet --profile;
      fi
    - if [ ! -f "web/themes/custom/bootstrap_sass/bootstrap_sass.theme" ];
      then
        composer --verbose install-boostrap-sass;
      fi

.test Php 7.1:
  stage: test
  image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine
  <<: *test_template

test Php 7.2:
  stage: test
  <<: *test_template

security report:
  stage: test
  <<: *report_template
  script:
    - ./${TOOL_PHAR} security:check
    - ./${TOOL_PHAR} security:check > ${REPORT_DIR}/security.txt
  variables:
    TOOL_PHAR: "security-checker.phar"
    TOOL_URL: "https://get.sensiolabs.org/security-checker.phar"

metrics:
  stage: metrics
  <<: *report_template
  script:
    - ./phpmetrics
        --report-html=${REPORT_DIR}
        --extensions=php,inc,module
        web
  variables:
    TOOL_PHAR: "phpmetrics.phar"
    TOOL_URL: "https://github.com/phpmetrics/PhpMetrics/releases/download/${PHPMETRICS}/phpmetrics.phar"
